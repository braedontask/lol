steps to tackle this: add a flag to user table for bots spin up N user bots make the N bots follow M people each make the N bots follow J random other bots (small value) add content to the bots profile (hard, avoid if possible) add new enrichment columns to content for bot_likes/bot_views define predicates for when a user meats pump criteria use scheduled jobs to add to the content enrichment columns through the like/view endpoints (<- endpoints are important because u want them to get notifs) union likes/view columns on content read query $$$ getting the variability in growth patterns u want is tricky. primarily because the time granularity is hard to get fine with our infra and a high coarse granularity gives bot behavior. to do it best you would have to make a standalone application that lives to do this (i think out of scope for ivette - but not a bad learning opportunity). if i had to build them on our infra tho: choose a boundary and an interval for the function (e.g. 3 hours, every 30 minutes) make a table for users you have won a pump with a counter for the number of intervals (e.g. userA, 5) schedule pump job every hour that identifies users based on ur predicates and adds them to the table above schedule a bot job for every 30 minutes that grabs users in the table and writes some number of bot_views/bot_likes based on the Y of ur function at interval X. decrement the interval counter for each user. also with the sigmoid thing... doing it right (with application) would pass by tarjei and im p sure he would hate this.